name: Notify test workflow
on:
  pull_request_target:
    types: [synchronize]

jobs:
  notify:
    runs-on: ubuntu-20.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: "Notify test workflow"
        uses: actions/github-script@v3
        if: ${{ github.base_ref == 'master' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var runID
            const client = github.getOctokit(process.env.GITHUB_TOKEN)
            const endpoint = "GET /repos/:owner/:repo/actions/workflows/:id/runs?&branch=:branch"
            const params = {
              owner: context.payload.pull_request.head.repo.owner.login,
              repo: context.payload.pull_request.head.repo.name,
              id: "build_and_test.yml",
              branch: context.payload.pull_request.head.ref,
            }

            for await (const runs of client.paginate.iterator(endpoint, params)) {
              const run = runs.data.find(r => {
                return true
              })
              if (run) {
                runID = run.id
                break
              }
            }

            var msg = "**[Test build #" + runID + " has started]"
              + "(https://api.github.com/repos/octo-org/octo-repo/actions/runs/" + runID + ")** "
              + "for PR " + github.event.pull_request.number
              + " at commit [`" + context.payload.pull_request.head.sha + "`]"
              + "(https://github.com/apache/spark/commit/"
              + context.payload.pull_request.head.sha + ")."

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: msg
            })
